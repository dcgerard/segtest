% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/higher_freq.R
\name{seg_multi}
\alias{seg_multi}
\title{Parallelized likelihood ratio test for segregation distortion for
arbitrary (even) ploidies.}
\usage{
seg_multi(
  g,
  p1_ploidy,
  p2_ploidy = p1_ploidy,
  p1 = NULL,
  p2 = NULL,
  model = c("seg", "auto", "auto_dr", "allo", "allo_pp", "auto_allo"),
  outlier = TRUE,
  ob = 0.03,
  db = c("ces", "prcs"),
  ntry = 10,
  df_tol = 0.001
)
}
\arguments{
\item{g}{One of two inputs
\itemize{
\item{A matrix of genotype counts. The rows index the loci and the columns index the genotypes.}
\item{An array of genotype log-likelihoods. The rows index the loci, the columns index the individuals, and the slices index the genotypes. Log-likelihoods are base e (natural log).}
}}

\item{p1_ploidy, p2_ploidy}{The ploidy of the first or second parent. Should be even.}

\item{p1}{One of three inputs
\itemize{
\item{A vector of parent 1's genotypes.}
\item{A matrix of parent 1's genotype log-likelihoods. The rows index the loci and the columns index the genotypes. Logs are in base e (natural log).}
\item{\code{NULL} (only supported when using genotype likelihoods for the offspring)}
}}

\item{p2}{One of three inputs
\itemize{
\item{A vector of parent 1's genotypes.}
\item{A matrix of parent 1's genotype log-likelihoods. The rows index the loci and the columns index the genotypes. Logs are in base e (natural log).}
\item{\code{NULL} (only supported when using genotype likelihoods for the offspring)}
}}

\item{model}{One of six forms:
\describe{
\item{\code{"seg"}}{Segmental allopolyploid. Allows for arbitrary levels of polysomic and disomic inheritance. This can account for both double reduction and preferential pairing.}
\item{\code{"auto"}}{Autopolyploid. Allows only for polysomic inheritance. No double reduction.}
\item{\code{"auto_dr"}}{Autopolyploid, allowing for the effects of double reduction.}
\item{\code{"allo"}}{Allopolyploid. Only complete disomic inheritance is explored.}
\item{\code{"allo_pp"}}{Allopolyploid, allowing for the effects of partial preferential pairing.}
\item{\code{"auto_allo"}}{Only complete disomic and complete polysomic inheritance is studied.}
}}

\item{outlier}{A logical. Should we allow for outliers (\code{TRUE}) or not (\code{FALSE})?}

\item{ob}{The default upper bound on the outlier proportion.}

\item{db}{Should we use the complete equational segregation model (\code{"ces"}) or
the pure random chromatid segregation model (\code{"prcs"}) to determine the upper
bound(s) on the double reduction rate(s). See \code{\link{drbounds}()}
for details.}

\item{ntry}{The number of times to try the optimization.
You probably do not want to touch this.}

\item{df_tol}{Threshhold for the rank of the Jacobian for df calculation.
You probably do not want to touch this.}
}
\value{
A data frame with the following elements:
\describe{
\item{\code{statistic}}{The likelihood ratio test statistic}
\item{\code{p_value}}{The p-value of the likelihood ratio test.}
\item{\code{df}}{The degrees of freedom of the test.}
\item{\code{df0}}{Number of parameters under null.}
\item{\code{df1}}{Number of parameters under the alternative.}
\item{\code{q0}}{The MLE of the genotype frequencies under the null.}
\item{\code{q1}}{The MLE of the genotype frequencies under the alternative.}
}
}
\description{
This will run \code{\link{seg_lrt}()} across many loci.
}
\section{Parallel Computation}{


The \code{seg_multi()} function supports parallel computing. It does
so through the \href{https://cran.r-project.org/package=future}{future}
package.

You first specify the evaluation plan with \code{\link[future]{plan}()}
from the \code{future} package. On a local machine, this is typically
just \code{future::plan(future::multisession, workers = nc)} where
\code{nc} is the number of workers you want. You can find the maximum
number of possible workers with \code{\link[future]{availableCores}()}.
You then run \code{seg_multi()}, then shut down the workers with
\code{future::plan(future::sequential)}.
}

\examples{
\donttest{
## Assuming genotypes are known (typically a bad idea)
glist <- multidog_to_g(mout = ufit, type = "all_g", p1 = "indigocrisp", p2 = "sweetcrisp")
p1_1 <- glist$p1
p2_1 <- glist$p2
g_1 <- glist$g
s1 <- seg_multi(g = g_1, p1_ploidy = 4, p2_ploidy = 4, p1 = p1_1, p2 = p2_1)
s2 <- seg_multi(g = g_1, p1_ploidy = 4, p2_ploidy = 4, p1 = NULL, p2 = NULL)

## Using genotype likelihoods (typically a good idea)
glist <- multidog_to_g(mout = ufit, type = "all_gl", p1 = "indigocrisp", p2 = "sweetcrisp")
p1_2 <- glist$p1
p2_2 <- glist$p2
g_2 <- glist$g

future::plan(future::multisession, workers = 2)
s3 <- seg_multi(g = g_2, p1_ploidy = 4, p2_ploidy = 4, p1 = p1_2, p2 = p2_2)
future::plan(future::sequential)

future::plan(future::multisession, workers = 2)
s4 <- seg_multi(g = g_2, p1_ploidy = 4, p2_ploidy = 4, p1 = NULL, p2 = NULL)
future::plan(future::sequential)
}

}
\seealso{
\itemize{
\item \code{\link[=seg_lrt]{seg_lrt()}} Single locus LRT for segregation distortion.
\item \code{\link[=gamfreq]{gamfreq()}} Gamete frequencies under various models of meiosos
\item \code{\link[=gf_freq]{gf_freq()}} F1 genotype frequencies under various models of meiosis.
\item \code{\link[=multidog_to_g]{multidog_to_g()}} Converts the output of \code{updog::multidog()} into something that you can input into \code{seg_multi()}.
}
}
\author{
David Gerard
}
